"""
Django settings for ocean_dev project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import base64
import os
from datetime import timedelta
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT_DIR = os.path.dirname(BASE_DIR)
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))
DJANGO_ROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# for creating a log folder
if not os.path.exists(os.path.join(PROJECT_ROOT_DIR, "log/")):
    os.makedirs((os.path.join(PROJECT_ROOT_DIR, "log/")))

# Log files path
INFO_LOG_PATH = os.path.join(PROJECT_ROOT_DIR, "log/ocean_dev_info.log")
ERROR_LOG_PATH = os.path.join(PROJECT_ROOT_DIR, "log/ocean_dev_error.log")

# Log size in MB
LOG_SIZE = 5

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=kkya+zrgefu&39cj!2@bu+10k3vjf*4ak1+#a1u=t*xnls#k='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'drf_yasg',
    'django_filters',
    'rest_framework',
    'transaction_app.apps.TransactionAppConfig',
    'contact_app.apps.ContactAppConfig',
    'registration.apps.RegistrationConfig',
    'django_user_agents',
    'cities_light',
    'django_apscheduler',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

USER_AGENTS_CACHE = None

# Enable CORS
CORS_ORIGIN_ALLOW_ALL = True

ALLOWED_HOSTS = ['*']

ROOT_URLCONF = 'ocean_dev.urls'

TEMPLATE_DIRS = [os.path.join(SETTINGS_PATH, 'templates')]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_DIRS,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ocean_dev.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/api/v1/static/'
STATIC_ROOT = os.path.join(SETTINGS_PATH, 'static')
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s|%(asctime)s|%(module)s|%(process)d|%(thread)d| '
                      '[%(name)s:%(lineno)s] | %(message)s',
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        "console": {
            "class": "logging.StreamHandler",
            "level": "DEBUG",
            "formatter": "simple",
            "stream": "ext://sys.stdout"
        },
        "info_file_handler": {
            "class": "logging.handlers.RotatingFileHandler",
            "level": "INFO",
            "formatter": "verbose",
            "filename": INFO_LOG_PATH,
            "maxBytes": LOG_SIZE * 1024 * 1024,
            "backupCount": 20,
            "encoding": "utf8"
        },
        "error_file_handler": {
            "class": "logging.handlers.RotatingFileHandler",
            "level": "ERROR",
            "formatter": "verbose",
            "filename": ERROR_LOG_PATH,
            "maxBytes": LOG_SIZE * 1024 * 1024,
            "backupCount": 20,
            "encoding": "utf8"
        },

    },
    'loggers': {
        '': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'propagate': True,
            'level': 'INFO',
        },
        'ocean_dev': {
            'handlers': ['error_file_handler'],
            'level': 'ERROR',
        },

    }
}

try:
    from local import *
except Exception:
    pass

# Details for sending emails (GMAIL smtp)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'oceandev2021@gmail.com'
EMAIL_HOST_PASSWORD = 'Oceandev@2021'
EMAIL_DEFAULT_EMAIL = 'oceandev2021@gmail.com'

# Details for sending emails (AWS smtp)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'email-smtp.us-east-1.amazonaws.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'AKIA47LG22NWIXLGXPJI'
# EMAIL_HOST_PASSWORD = 'BKOdd8PwUrqS28kL1xZGmLvo2+yIrPeTc19Qu6nkh+kf'
# EMAIL_DEFAULT_EMAIL = 'Ocean<support@thisisocean.com>'
# EMAIL_USE_TLS = True

# Email setup for AWS SES
# EMAIL_HOST_USER = 'AKIA47LG22NWIXLGXPJI'
# EMAIL_HOST_PASSWORD = 'BKOdd8PwUrqS28kL1xZGmLvo2+yIrPeTc19Qu6nkh+kf'
# EMAIL_BACKEND = 'django_ses.SESBackend'
# EMAIL_HOST = 'email-smtp.us-east-1.amazonaws.com'
# AWS_SES_REGION_NAME = 'us-east-1'
# AWS_SES_REGION_ENDPOINT = 'email.us-east-1.amazonaws.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# AWS_ACCESS_KEY_ID = "AKIA47LG22NWMLLCDMPZ"
# AWS_SECRET_ACCESS_KEY = "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"
# EMAIL_DEFAULT_EMAIL = 'Ocean<support@thisisocean.com>'

# user role choices data
ADMIN_ROLE_VALUE = 1
SME_ROLE_VALUE = 2
SUPPLIER_ROLE_VALUE = 3
FACTOR_ROLE_VALUE = 4
ROLE_CHOICES = ((ADMIN_ROLE_VALUE, "ADMIN"), (SME_ROLE_VALUE, "SME"), (SUPPLIER_ROLE_VALUE, "SUPPLIER"),
                (FACTOR_ROLE_VALUE, "FACTOR"))

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 500,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

AUTH_USER_MODEL = 'registration.User'

FRONTEND_SIGN_UP_URL = 'auth/signup-redirect/'
FRONTEND_LOGIN_URL = 'auth/login'
FRONTEND_PASSWORD_RESET_URL = 'auth/reset-password'
SHIPMENT_SEND_BACK_URL = 'dashboard/invoices/shipment/'
PARAMS_IN_SHIPMENT_SEND_BACK = "?status=shipment_send_back&id="
SME_SIGN_URL = "dashboard/contracts/add-contracts/?id="
ONBOARD_VIEW = "dashboard/users/view?id="

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

# for saving files locally
MEDIA_URL = '/api/v1/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Codat constants
CODAT_API_KEY = config('CODAT_API_KEY')
CODAT_AUTHORIZATION_KEY = config('CODAT_AUTHORIZATION_KEY')

# Application flow stages constants
APP_USER_DETAIL_PAGE = "USER_DETAIL_PAGE"
APP_USER_LIST_PAGE = "USER_LIST_PAGE"
APP_AUTH_TOKEN_GENERATOR = "AUTH_TOKEN_GENERATOR"
APP_OTP_VALIDATION_PAGE = "OTP_VALIDATION_PAGE"
APP_FROM_EMAIL_SLUG_VALUE = "APP_FROM_EMAIL_SLUG_VALUE"
APP_LOGIN_PAGE = "LOGIN_PAGE"
APP_PASSWORD_SET_PAGE = "PASSWORD_SET_PAGE"

# Login flow action needed constants
ADMIN_ACTION_NEEDED = "ADMIN_ACTION_NEEDED"
USER_ACTION_NEEDED = "USER_ACTION_NEEDED"
NO_ACTION_NEEDED = "NO_ACTION_NEEDED"
DIRECT_TO_DASHBOARD = "DIRECT_TO_DASHBOARD"
CREATE_DETAILS_PAGE = "CREATE_DETAILS_PAGE"
DETAIL_PAGE_ADMIN_APPROVAL_NEEDED = "DETAIL_PAGE_ADMIN_APPROVAL_NEEDED"
EDIT_DETAILS_PAGE = "EDIT_DETAILS_PAGE"

# User list action constants
USER_REVIEW_PENDING = "USER_REVIEW_PENDING"
USER_ACTIVATION_PENDING = "USER_ACTIVATION_PENDING"
USER_NO_ACTION_NEEDED = "NO_ACTION_NEEDED"
CREDIT_CHECK = "CREDIT_CHECK"
ADMIN_APPROVE_OR_REJECT = "ADMIN_APPROVE_OR_REJECT"
SME_ONBOARD = "SME_ONBOARD"
SUPPLIER_ONBOARD = "SUPPLIER_ONBOARD"

# Email Template Subjects constants
ACCOUNT_DEACTIVATED = "Account Deactivated"
ACCOUNT_ACTIVATED = "Account Activated"
SENDING_LEADS_DATA = "Leads Data"
REJECTED_LEADS_DATA = "Ocean User Rejected"
SENDING_CONTACTS_DATA = "Contact Info Data"
USER_CREATED = "Invitation to Join Ocean"  # "Added to Ocean Group"
PASSWORD_RESET = "Reset Password"
EMAIL_SUPPLIER_UPLOAD_INVOICE = "Request for uploading invoice"
EMAIL_USER_DATA_REVIEW = "SME onboarding review and approval"
EMAIL_SHIPMENT_SEND_BACK = "Shipment Send back"
CODAT_SYNC_COMPLETED = "Codat Data Sync Completed"

LEAD_APPROVAL_PENDING = "LEAD_APPROVAL_PENDING"
USER_DETAILS_ADDED = "USER_DETAILS_ADDED"
USER_ACTIVATED = "USER_ACTIVATED"
FUND_REQUEST_ADDED = "FUND_REQUEST_ADDED"
FUND_REQUEST_APPROVED = "FUND_REQUEST_APPROVED"
SHIPMENT_ADDED_BY_SUPPLIER = "SHIPMENT_ADDED_BY_SUPPLIER"
SHIPMENT_ADDED_BY_SME = "SHIPMENT_ADDED_BY_SME"
SHIPMENT_ADDED_PAYMENT_PENDING = "SHIPMENT_ADDED_PAYMENT_PENDING"
SHIPMENT_SEND_BACK_BY_SUPPLIER = "SHIPMENT_SEND_BACK_BY_SUPPLIER"
SHIPMENT_SEND_BACK_BY_SME = "SHIPMENT_SEND_BACK_BY_SME"
SHIPMENT_ADDITIONAL_FILE_ADDED_BY_SUPPLIER = "SHIPMENT_ADDITIONAL_FILE_ADDED_BY_SUPPLIER"
SHIPMENT_ADDITIONAL_FILE_ADDED_BY_SME = "SHIPMENT_ADDITIONAL_FILE_ADDED_BY_SME"

# OTP_EXPIRY_TIME in minutes
OTP_EXPIRY_TIME = 5

# Fund invoice action_taken and next_step values
REQUEST_NO_ACTION_NEEDED = "NO_ACTION_NEEDED"
CREDIT_REQUEST_CREATED = "CREDIT_REQUEST_CREATED"
CREDIT_ADMIN_APPROVAL_NEEDED = "CREDIT_ADMIN_APPROVAL_NEEDED"
CREDIT_REQUEST_ADMIN_APPROVED = "CREDIT_REQUEST_ADMIN_APPROVED"
CREDIT_REQUEST_ADMIN_REJECTED = "CREDIT_REQUEST_ADMIN_REJECTED"
CREATE_CREDIT_REQUEST = "CREATE_CREDIT_REQUEST"
CREDIT_ADMIN_CREATE_MASTER_CONTRACT = "CREDIT_ADMIN_CREATE_MASTER_CONTRACT"
CREDIT_ADMIN_CREATE_CONTRACT = "CREDIT_ADMIN_CREATE_CONTRACT"
CREDIT_CONTRACT_ADMIN_CREATED = "CREDIT_CONTRACT_ADMIN_CREATED"
CREDIT_CONTRACT_ADMIN_TO_SIGN = "CREDIT_CONTRACT_ADMIN_TO_SIGN"
CREDIT_CONTRACT_ADMIN_SIGNED = "CREDIT_CONTRACT_ADMIN_SIGNED"
CREDIT_CONTRACT_ADMIN_SEND_SME = "CREDIT_CONTRACT_ADMIN_SEND_SME"
CREDIT_CONTRACT_ADMIN_SEND_SME_DONE = "CREDIT_CONTRACT_ADMIN_SEND_SME_DONE"
CREDIT_CONTRACT_SME_APPROVAL_NEEDED = "CREDIT_CONTRACT_SME_APPROVAL_NEEDED"
CREDIT_CONTRACT_SME_APPROVED = "CREDIT_CONTRACT_SME_APPROVED"
CREDIT_CREATE_INVOICE_REQUEST = "CREDIT_CREATE_INVOICE_REQUEST"
# CREDIT_CONTRACT_ADMIN_APPROVAL_NEEDED = "CREDIT_CONTRACT_ADMIN_APPROVAL_NEEDED"
# CREDIT_CONTRACT_ADMIN_APPROVED = "CREDIT_CONTRACT_ADMIN_APPROVED"
# CREDIT_CONTRACT_SME_ACKNOWLEDGMENT_NEEDED = "CREDIT_CONTRACT_SME_ACKNOWLEDGMENT_NEEDED"
# CREDIT_CONTRACT_SME_ACKNOWLEDGED = "CREDIT_CONTRACT_SME_ACKNOWLEDGED"

CREDIT_CREATE_SHIPMENT = "CREDIT_CREATE_SHIPMENT"
CREDIT_SHIPMENT_SUPPLIER_CREATED = "CREDIT_SHIPMENT_SUPPLIER_CREATED"
CREDIT_SHIPMENT_SME_CREATED = "CREDIT_SHIPMENT_SME_CREATED"
CREDIT_SHIPMENT_SME_ACKNOWLEDGMENT_NEEDED = "CREDIT_SHIPMENT_SME_ACKNOWLEDGMENT_NEEDED"
CREDIT_SHIPMENT_SME_ACKNOWLEDGED = "CREDIT_SHIPMENT_SME_ACKNOWLEDGED"
CREDIT_SHIPMENT_SUPPLIER_ACKNOWLEDGMENT_NEEDED = "CREDIT_SHIPMENT_SUPPLIER_ACKNOWLEDGMENT_NEEDED"
CREDIT_SHIPMENT_SUPPLIER_ACKNOWLEDGED = "CREDIT_SHIPMENT_SUPPLIER_ACKNOWLEDGED"
CREDIT_SHIPMENT_ADDITIONAL_FILE_SUPPLIER_UPLOADED = "CREDIT_SHIPMENT_ADDITIONAL_FILE_SUPPLIER_UPLOADED"
CREDIT_SHIPMENT_ADDITIONAL_FILE_SME_UPLOADED = "CREDIT_SHIPMENT_ADDITIONAL_FILE_SME_UPLOADED"
CREDIT_SHIPMENT_SUPPLIER_SEND_BACK = "CREDIT_SHIPMENT_SUPPLIER_SEND_BACK"
CREDIT_SHIPMENT_SME_SEND_BACK = "CREDIT_SHIPMENT_SME_SEND_BACK"
# CREDIT_SHIPMENT_ADMIN_APPROVAL_NEEDED = "CREDIT_SHIPMENT_ADMIN_APPROVAL_NEEDED"
# CREDIT_SHIPMENT_ADMIN_APPROVED = "CREDIT_SHIPMENT_ADMIN_APPROVED"
# CREDIT_SHIPMENT_ADMIN_REJECTED = "CREDIT_SHIPMENT_ADMIN_REJECTED"

# CREDIT_UPDATE_SUPPLIER_PAYMENT = "CREDIT_UPDATE_SUPPLIER_PAYMENT"
# first installment completed
# CREDIT_ADMIN_PAID_SUPPLIER = "CREDIT_ADMIN_PAID_SUPPLIER"
# CREDIT_PAYMENT_SUPPLIER_ACKNOWLEDGMENT_NEEDED = "CREDIT_PAYMENT_SUPPLIER_ACKNOWLEDGMENT_NEEDED"
# CREDIT_PAYMENT_SUPPLIER_ACKNOWLEDGED = "CREDIT_PAYMENT_SUPPLIER_ACKNOWLEDGED"
# CREDIT_PAYMENT_ACKNOWLEDGED = "CREDIT_PAYMENT_ACKNOWLEDGED"
CREDIT_PAYMENT_VIEW = "CREDIT_PAYMENT_VIEW"
# CREDIT_PAYMENT_VIEW_UPDATE = "CREDIT_PAYMENT_VIEW_UPDATE"
# payment next step
CREDIT_ADD_PAYMENT = "CREDIT_ADD_PAYMENT"
CREDIT_PAYMENT_STATUS_UPDATE = "CREDIT_PAYMENT_STATUS_UPDATE"
CREDIT_PAYMENT_ACKNOWLEDGMENT_NEEDED = "CREDIT_PAYMENT_ACKNOWLEDGMENT_NEEDED"
CREDIT_SHIPMENT_ADDITIONAL_FILES_SME_UPLOAD_NEEDED = "CREDIT_SHIPMENT_ADDITIONAL_FILES_SME_UPLOAD_NEEDED"
CREDIT_SHIPMENT_ADDITIONAL_FILES_SUPPLIER_UPLOAD_NEEDED = "CREDIT_SHIPMENT_ADDITIONAL_FILES_SUPPLIER_UPLOAD_NEEDED"

# Request credit stages constants
# CREATE_CREDIT_REQUEST = "CREATE_CREDIT_REQUEST"
# CREDIT_INVOICE_UPLOAD = "CREDIT_INVOICE_UPLOAD"
# CREDIT_INVOICE_APPROVAL = "CREDIT_INVOICE_APPROVAL"
# CREDIT_CONTRACT_STAGE = "CREDIT_CONTRACT_STAGE"

# SME_UPLOAD_CREDIT_INVOICE = "SME_UPLOAD_CREDIT_INVOICE"
# CREDIT_INVOICE_SME_UPLOADED = "CREDIT_INVOICE_SME_UPLOADED"
# CREDIT_INVOICE_REQUEST_SUPPLIER = "CREDIT_INVOICE_REQUEST_SUPPLIER"
# SUPPLIER_UPLOAD_CREDIT_INVOICE = "SUPPLIER_UPLOAD_CREDIT_INVOICE"
# CREDIT_INVOICE_SUPPLIER_UPLOADED = "CREDIT_INVOICE_SUPPLIER_UPLOADED"
# CREDIT_INVOICE_SME_APPROVAL_NEEDED = "CREDIT_INVOICE_SME_APPROVAL_NEEDED"
# CREDIT_INVOICE_SME_APPROVED = "CREDIT_INVOICE_SME_APPROVED"
# CREDIT_INVOICE_SME_REJECTED = "CREDIT_INVOICE_SME_REJECTED"
# CREDIT_INVOICE_SUPPLIER_APPROVAL_NEEDED = "CREDIT_INVOICE_SUPPLIER_APPROVAL_NEEDED"
# CREDIT_INVOICE_SUPPLIER_APPROVED = "CREDIT_INVOICE_SUPPLIER_APPROVED"
# CREDIT_INVOICE_SUPPLIER_REJECTED = "CREDIT_INVOICE_SUPPLIER_REJECTED"
# CREDIT_INVOICE_ADMIN_APPROVAL_NEEDED = "CREDIT_INVOICE_ADMIN_APPROVAL_NEEDED"
# CREDIT_INVOICE_ADMIN_APPROVED = "CREDIT_INVOICE_ADMIN_APPROVED"
# CREDIT_INVOICE_ADMIN_REJECTED = "CREDIT_INVOICE_ADMIN_REJECTED"

# Credit request approval actions url
CREDIT_REQUEST_REJECTED = "reject"
CREDIT_REQUEST_APPROVED = "approve"
SHIPMENT_APPROVED = "shipment_approve"
SHIPMENT_REJECTED = "shipment_reject"

# Shipment request acknowledge/sendback urls
SHIPMENT_ACKNOWLEDGED = "acknowledge"
SHIPMENT_SEND_BACK = "send_back"

REQUEST_REJECTED = True

# Request assign to user constants
ADMIN = {"name_value": "ADMIN", "number_value": 1}
SME = {"name_value": "SME", "number_value": 2}
SUPPLIER = {"name_value": "SUPPLIER", "number_value": 3}
FACTOR = {"name_value": "FACTOR", "number_value": 4}

# Sync status for codat
SYNC_STARTED = "sync_started"
NO_SYNC = "no_sync"
SYNC_COMPLETED = "sync_completed"
SYNC_DELAY = "delay_in_sync"

# Request assign to contract catogories
NEW_CONTRACT = {"name_value": "NEW_CONTRACT", "number_value": 1}
MASTER_CONTRACT = {"name_value": "MASTER_CONTRACT", "number_value": 2}

# File storages base paths
ON_BOARDING_DATA_BASE_PATH = 'user_details'
USER_DATA = "user_data"
# path will <ON_BOARDING_DATA_BASE_PATH>/<user.id>/<ON_BOARDING_DATA_FILE_PATH>
ON_BOARDING_DATA_FILE_PATH = 'on_boarding_data'
# path will <ON_BOARDING_DATA_BASE_PATH>/<user.id>/<ON_BOARDING_DATA_ZIP_FILE_PATH>
ON_BOARDING_DATA_ZIP_FILE_PATH = 'on_board_zip_file'
ON_BOARDING_DATA_ZIP_FILE_NAME = 'on_board_files'
ON_BOARDING_SME_PDF_NAME = 'sme_data.pdf'
FUND_INVOICE_DATA = "fund_invoice_data"

# path will <FUND_INVOICE_DATA>/<request_id>/<FUND_INVOICE_FILES>
FUND_INVOICE_FILES = "fund_invoice_docs"
# path will <FUND_INVOICE_DATA>/<request_id>/<SHIPMENT_FILES>
SHIPMENT_FILES = "shipment_docs"
# path will <FUND_INVOICE_DATA>/<request_id>/<ADDITIONAL_SHIPMENT_FILES>
ADDITIONAL_SHIPMENT_FILES = "additional_shipment_docs"
# path will <FUND_INVOICE_DATA>/<request_id>/<INVOICE_FILES>
CONTRACT_SUPPORTING_DOCS = "contract_supporting_docs"
# path will <FUND_INVOICE_DATA>/<request_id>/<SIGNED_CONTRACT_FILES>
SIGNED_CONTRACT_FILES = "signed_contract_files"
GENERATED_CONTRACT_FILE_NAME = 'contract.pdf'
GENERATED_MASTER_CONTRACT_FILE_NAME = "master_contract.pdf"
MASTER_CONTRACT_SME_SIGNED_NAME = 'counter_signed_master_contract.pdf'
MASTER_CONTRACT_ADMIN_SIGNED_NAME = 'signed_master_contract.pdf'
# path will <FUND_INVOICE_DATA>/<request_id>/<PAYMENT_FILES>/<payment_id>/
PAYMENT_FILES = "payment_files"
# INVOICE_FILES = "invoice_files"
# # path will <FUND_INVOICE_DATA>/<request_id>/<CONTRACT_SUPPORTING_DOCS>
XERO_FILES_PATH = 'xero_file_path'
# path will user_details/<id>/xero_file_path/

ADMIN_EMAIL = 'rincy.samuel@seqato.com'

# On-boarding files key
# max file size in mb
MAX_FILE_SIZE = 100
FILE_UPLOAD_MAX_MEMORY_SIZE = MAX_FILE_SIZE * 1024 * 1024
# optional
USER_DETAIL_ID_KEY = ['Passport']
ON_BOARDING_SME_NEEDED_KEY_WITH_XERO = ['no_full_time_employees', 'inventory_on_hand']

ON_BOARDING_SME_NEEDED_KEY_WITHOUT_XERO = ['no_full_time_employees', 'last_fy_annual_revenue',
                                           'total_debt_amounts', 'inventory_on_hand',
                                           "current_balance_sheet", "last_year_account_statement",
                                           "last_year_profit_loss"]
ON_BOARDING_XERO_FILES_KEY = []

ADDITIONAL_INFO_KEY = ["TaxNumber", "EmployerIdentificationNumber"]
ADDRESS_FIELD_KEY = ["AddressLine1", "AddressLine2", "City",
                     "Region", "PostalCode", "Country"]

INVOICE = 1
BL = 2
AWB = 3
PACKING_LIST = 4
SGS_REPORT = 5
ADDITIONAL_DOC = 6
SHIPMENT_DOCUMENTS = [(INVOICE, 'INVOICE'), (BL, 'BL'), (AWB, 'AWB'), (PACKING_LIST, 'PACKING_LIST'),
                      (SGS_REPORT, 'SGS_REPORT'), (ADDITIONAL_DOC, 'ADDITIONAL_DOC')]

SHIPMENT_DOC_KEY = ['invoice', 'bl', 'awb', 'packing_list', 'sgs_report', 'additional_doc']

# Password validation constants
MIN_PASSWORD_LENGTH = 8
# For uppercase letters, numbers, special characters
MIN_SPECIAL_CHARACTERS_LENGTH = 1

# Template file paths
ONBOARD_TEMPLATE_FILE_PATH = "template_files/onboarding_data_template_file/"
ONBOARD_TEMPLATE_SME_FILE_NAME = "onboard-Information-sme.html"
ONBOARD_TEMPLATE_SUPPLIER_FILE_NAME = "onboard-Information-supplier.html"
CONTRACT_TEMPLATE_FILE_PATH = "template_files/contract_template_file/signed-contract.html"
MASTER_CONTRACT_TEMPLATE_FILE_PATH = "template_files/contract_template_file/master-contract.html"

# Docu sign constants
DOCU_SIGN_AUTH_URL = "account-d.docusign.com"  # demo
# DOCU_SIGN_AUTH_URL = "account.docusign.com"  # prod
DOCU_SIGN_AUTH_BASE_URL = "https://account-d.docusign.com/oauth/token"  # demo
# DOCU_SIGN_AUTH_BASE_URL = "https://account.docusign.com/oauth/token"  # prod
DOCU_SIGN_AUTH_GRANT_TYPE = 'urn:ietf:params:oauth:grant-type:jwt-bearer'
CONTRACT_FILE_ADMIN_SIGNED_NAME = 'signed_contract.pdf'
CONTRACT_FILE_SME_SIGNED_NAME = 'counter_signed_contract.pdf'
# integration key in Apps and Integration Keys
DOCU_SIGN_CLIENT_ID = "0cc2c076-4966-4dfc-84dc-0c384eb3821d"  # demo
# DOCU_SIGN_CLIENT_ID = "4413020d-ae25-4945-9765-9e490794a10d"  # prod
# user id from account data
DOCU_SIGN_CLIENT_USER_ID = "1d5bb07e-4c9f-4285-b6b4-25f1907c711c"  # demo
# DOCU_SIGN_CLIENT_USER_ID = "656eedee-5756-419e-b2d2-8731ad80bc19"  # prod
# account id from account data
DOCU_SIGN_ACCOUNT_ID = "8f7a778c-b7af-4fee-8e2d-a1d9d590da86"  # demo
# DOCU_SIGN_ACCOUNT_ID = "04cde327-4967-4c30-a669-681990c51989"  # prod
DOCU_SIGN_HOST_URL = "https://demo.docusign.net/restapi"  # demo
# DOCU_SIGN_HOST_URL = "https://eu.docusign.net/restapi"  # prod
DOCU_SIGN_PRIVATE_KEY_PATH = f'{BASE_DIR}/certificates/docu_sign/docu_sign_key.pem'

# Xero constants
AUTH_URL_GENERATOR = 'https://login.xero.com/identity/connect/authorize?response_type=code'
CLIENT_ID = "180B379EC75147D0B9927A069080273F"
CLIENT_SECRET = "CpX3nzIS9oB3akLzhxE2OMuwOep8dRGjQPmwTsP89D16YW7c"

SCOPES = "offline_access+openid+profile+email+accounting.transactions+accounting.contacts+" \
         "accounting.settings+accounting.attachments"
STATE = "123"
BASIC_TOKEN = base64.urlsafe_b64encode((CLIENT_ID + ":" + CLIENT_SECRET).encode()).decode()
CONNECTION_URL = "https://api.xero.com/connections"
TOKEN_URL = "https://identity.xero.com/connect/token"
# BALANCE_SHEET_URL = 'https://api.xero.com/api.xro/2.0/Reports/BalanceSheet?tfromDate=2021-04-01&toDate=2022-03-31&timeframe=MONTH&periods=11'
#
BALANCE_SHEET_URL = 'https://api.xero.com/api.xro/2.0/Reports/BalanceSheet?timeframe=MONTH&periods=11&'

PROFIT_LOSS_URL = 'https://api.xero.com/api.xro/2.0/Reports/ProfitAndLoss?timeframe=MONTH&periods=11&'
BANK_STATEMENT_URL = 'https://api.xero.com/api.xro/2.0/Reports/BankSummary?&timeframe=MONTH&periods=11'
ORGANIZATION_URL = 'https://api.xero.com/api.xro/2.0/Organisation'
REFRESHING_URL = 'https://identity.xero.com/connect/token'

PRODUCTION = False

try:
    from .local import *
except ImportError:
    pass

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DATABASE_NAME,
        'USER': DATABASE_USER,
        'PASSWORD': DATABASE_PASSWORD,
        'HOST': DATABASE_HOST,
        'PORT': DATABASE_PORT,
    }
}

DOCU_SIGN_REDIRECT_URL = f"{FRONTEND_URL}dashboard/contracts/add-contracts/?id="
SIGN_CONTRACT = "Sign Contract"
SIGN_CONTRACT_REMINDER = "Signing Reminder"
REDIRECT_URI = f"{FRONTEND_URL}sme-onboard/"
PAYMENT_ACKNOWLEDGE_SUPPLIER = "Payment Notification"
SENDER_NAME = "Valkin Group"

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['fr', 'en', 'de']
CODAT_URI = "https://visualize.codat.io/company/"
